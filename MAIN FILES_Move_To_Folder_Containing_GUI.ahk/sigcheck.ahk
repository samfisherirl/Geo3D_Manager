; Generated by Auto-GUI 3.0.1
#NoEnv
SetWorkingDir, %A_ScriptDir%
SetBatchLines -1 
#SingleInstance, Force
    ;#Include %A_ScriptDir%\lib\Neutron.ahk
global LogGames := A_AppDataCommon "\geo3d\gameslist.txt" 
global Dir := A_AppDataCommon "\geo3d"
;LogRead()

;browsefor()
;Gameexe := "samsung"
;Removefromlog() 

browsefor()
{
    global Selectgame, Gameexe, Gamepath, Gameextenstion, Gamenameonly, successbi
    ;declare to be used elsewhere
    selectgame := ""
    FileSelectFile, Selectgame, 1, , Select a game, Application (*.exe)
    ;browse for file
    if (Selectgame = "")
    {
        MsgBox, You didn't select anything.
        goto, leaver
    }
    else
    {
        SplitPath, Selectgame, Gameexe, Gamepath, Gameextenstion, Gamenameonly
    }
    bat := A_ScriptDir "\1.bat"
    sigcheck := A_ScriptDir "\sigcheck64.exe"
    logger := A_ScriptDir "\output.txt" 
    Field:=[]
    FileDelete, %bat%
    FileDelete, %logger% 
    ;check for 64x or 32x  
    writetobat=
(
%sigcheck% -a -c "%Selectgame%" > %logger% 
)
    FileAppend, %writetobat%, %bat%
    sleep, 100
    Run, %bat%  
    sleep, 500
    Loop, read, %logger%
    {  
        if (A_Index = "2")
        {   
            Col := A_LoopReadLine
            Field := StrSplit(Col, ",") 
            for index, value in Field
            {
                if InStr(value, "bit")
                {
                    bit := value
                    break
                }
            } 
            Delim := `"""" 
            bit := StrReplace(bit, Delim) 
            ; NewStr := StrReplace(Str, """")
            
            ; bit := Trim(bit) """
            Msgbox % bit ; <<<<<<< the field 1 and row 1
            if InStr(bit,"32")
            {
                bits := "32"
                install(bits)
            }
            else if InStr(bit,"64")
            {
                bits := "64"
                install(bits)                
            }
            else
                msgbox, unknown game version                       
        }
    }
    
    Addtolog(bits)
    CleanLog()
    
    LogRead()
    
    leaver:
    }
    
    RemoveGame(gametouninstall)
    {
        global LogGames, neutron, backupfolder, bits
        html:=""
        sep := "`n"
        GameLocation:=[]
        countlines:=[]
        GameExe:=[] 
        found := "0"  
        ; map button id to log file  
        Loop, Read, %LogGames%
        {
            if (A_LoopReadLine != "") {
                Info := A_LoopReadLine
                GameInfo := StrSplit(Info, ",") 
                GameLocation := GameInfo[4]
                GameExe := GameInfo[3]
                countlines := A_Index  
            } 
            GE := GameExe
            GL := GameLocation
            if InStr(GE, gametouninstall)
            { 
                found := "1"
                break
            }
        }  
        backupfolder := GL "\backup_files_geo_vr"
        if (found = "1")
        { 
            bat6 := A_ScriptDir "\6.bat"
            bat=
(
xcopy "%backupfolder%" "%GL%" /C /O /I /H /y
)
            filedelete, %bat6%
            fileappend, %bat%, %bat6%
            sleep, 150  
              try {      
            run, *Runas %bat6%,, min
        } catch { MsgBox, Could not obtain admin privileges. The Program will restart. 
            Run *RunAs %A_ScriptFullPath% %1%
            goto, leaver44
        }
            Removefromlog(GE)
            LogRead()
        }
        leaver44:
        ; restore backups 
    }


PushUpdates() {
    global LogGames
    GameLocation:=[]
    countlines:=1
    GameExe:=[] 
    bits:=[]
    found := "0"  
    ; map button id to log file  
    Loop, Read, %LogGames%
    {
        if (A_LoopReadLine != "") {
            Info := A_LoopReadLine
            GameInfo := StrSplit(Info, ",") 
            GameLocation[countlines] := GameInfo[4]
            GameExe[countlines] := GameInfo[3]
            bits[countlines] := GameInfo[5]
            countlines++
        }  
    }  
    bat := A_ScriptDir "\updater.bat"
    bat1 := A_ScriptDir "\updater1.bat"
    batwriter := ""
    Loop, %countlines%
    {
        GL := GameLocation[A_Index]
        bit := bits[A_Index]
        if (GL != "") {
        LocalGeo3D := A_ScriptDir "\geo3d\" bit "-bit"
        FileCopy, %LocalGeo3D%\*.*, %GL%, 1
        /*
(
%batwriter%
xcopy "%LocalGeo3D%" "%GL%" /C /O /I /H /y
)
        ; THIS NEEDS TO WRITE BAT .= "`n"
        */
    }
    }
    FileAppend, %batwriter%, %bat1%
    sleep, 150
    FileMove, %bat1%, %bat%, 1  
    try {        
        Run, *Runas %bat%,, min
        msgbox, Thanks for your patience, updating all Geo3D locations. 
          } catch {
            MsgBox, Could not obtain admin privileges. The Program will restart. 
            Run *RunAs %A_ScriptFullPath% %1%
            goto, leaver33
          }
          leaver33:
}
/*

next function

*/
